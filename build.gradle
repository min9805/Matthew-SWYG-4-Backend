plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id "io.freefair.lombok" version "8.6"
}

group = 'com.swygbro.trip'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()

    //payment
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //payment
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'

    // openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // 공간데이터
    implementation 'org.hibernate.orm:hibernate-spatial'

    // image jason 저장
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.3.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // 이미지 검사
    implementation 'org.apache.tika:tika-core:1.4'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // test container
    testImplementation "org.testcontainers:testcontainers:1.19.8"
    testImplementation 'org.testcontainers:junit-jupiter:1.19.8'
    testImplementation "org.testcontainers:mysql"
    testImplementation "org.testcontainers:mongodb"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

processResources {
    filesMatching('**/application.properties') {
        expand(project.properties)
    }
}

processResources {
    filesMatching('**/application.yml') {
        expand(project.properties)
    }
}
